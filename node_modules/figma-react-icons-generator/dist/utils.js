"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createIndex = exports.saveComponents = void 0;
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const os_1 = require("os");
const saveComponents = (iconpath, name, extension, component) => {
    const extensions = ['js', 'jsx', 'ts', 'tsx'];
    if (!extensions.includes(extension))
        process.exit(1);
    fs_extra_1.default.ensureDirSync(iconpath);
    fs_extra_1.default.outputFileSync(path_1.default.resolve(iconpath, `${name}.${extension}`), component);
};
exports.saveComponents = saveComponents;
const createIndex = ({ componentsFolder, indexFolder, indexFile }) => {
    let content = '';
    fs_extra_1.default.readdirSync(componentsFolder).forEach((file) => {
        const componentName = ((file.substring(0, file.indexOf('.')) || file).match(/[a-zA-Z0-9]+/g) || [])
            .map((w) => `${w.charAt(0).toUpperCase()}${w.slice(1)}`)
            .join('');
        const relativePathToComponent = path_1.default.relative(indexFolder, path_1.default.resolve(componentsFolder, componentName));
        const componentExport = `export { default as ${componentName} } from "./${relativePathToComponent}";`;
        content += componentExport + os_1.EOL;
    });
    fs_extra_1.default.writeFileSync(path_1.default.resolve(indexFolder, indexFile), content);
};
exports.createIndex = createIndex;
